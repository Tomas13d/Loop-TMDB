[{"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/index.jsx":"1","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/App.jsx":"2","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Navbar.jsx":"3","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/hooks/useInput.jsx":"4","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Grid.jsx":"5","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/Card.jsx":"6","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Sidebar.jsx":"7","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Content.jsx":"8","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Register.jsx":"9","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Login.jsx":"10","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Buttons.jsx":"11","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/CardRange.jsx":"12","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/Search.jsx":"13","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/comunnity.jsx":"14","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/utils/geners.js":"15","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/NotFound.jsx":"16"},{"size":683,"mtime":1646423396611,"results":"17","hashOfConfig":"18"},{"size":1116,"mtime":1647530660677,"results":"19","hashOfConfig":"18"},{"size":2299,"mtime":1647531481767,"results":"20","hashOfConfig":"18"},{"size":226,"mtime":1645716929796,"results":"21","hashOfConfig":"18"},{"size":534,"mtime":1646364647283,"results":"22","hashOfConfig":"18"},{"size":2566,"mtime":1646422892310,"results":"23","hashOfConfig":"18"},{"size":686,"mtime":1646423388379,"results":"24","hashOfConfig":"18"},{"size":2162,"mtime":1646418042181,"results":"25","hashOfConfig":"18"},{"size":3672,"mtime":1646418161305,"results":"26","hashOfConfig":"18"},{"size":2853,"mtime":1646418204025,"results":"27","hashOfConfig":"18"},{"size":1066,"mtime":1646419285865,"results":"28","hashOfConfig":"18"},{"size":838,"mtime":1647537176621,"results":"29","hashOfConfig":"18"},{"size":1226,"mtime":1646368642962,"results":"30","hashOfConfig":"18"},{"size":2012,"mtime":1646423342551,"results":"31","hashOfConfig":"18"},{"size":879,"mtime":1646366910439,"results":"32","hashOfConfig":"18"},{"size":386,"mtime":1646423231033,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3wkouv",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/index.jsx",[],["72","73"],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/App.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Navbar.jsx",["74","75"],"import React, { useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Buttons from \"./Buttons\";\nimport { UserContext } from \"..\";\nimport Search from \"../common/Search\";\nimport { Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n    const {user,setUser} = useContext(UserContext);\n\n    //persistencia \n    useEffect(()=>{\n      if(user){\n        axios\n        .get(\"/api/login/me\")\n        .then(res =>{\n          setUser(res.data)\n        })\n      }\n  },[])\n\n\nconst favButton =() => {\n    if(user.id) {\n       return(\n        <>\n         <Link to={\"/favorites\"}>\n           <img  width={\"65\"} src=\"https://cdn-icons.flaticon.com/png/512/2190/premium/2190625.png?token=exp=1647532351~hmac=197271b4f5dc419ffdc694579aad4c5d\"/>\n        </Link>\n        \n        </>\n       ) \n    }\n}\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-dark nav-color\">\n        <Link to={\"/upcomingMovies\"}>\n        <img src=\"https://see.fontimg.com/api/renderfont4/X3WjK/eyJyIjoiZnMiLCJoIjo1MSwidyI6MTAwMCwiZnMiOjUxLCJmZ2MiOiIjNzVDQUJFIiwiYmdjIjoiIzQ2NDY0NiIsInQiOjF9/TE9PUA/uncracked-free-trial.png\" alt=\"logo\" />\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav \">\n            <Link to={\"/popularMovies\"}>\n              <a className=\"nav-item nav-link\" href=\"/popularMovies\"><u className=\"textGeneralNav\">Movies</u></a>\n            </Link>\n            <Link to={\"/series\"}>\n              <a className=\"nav-item nav-link\" href=\"/series\"><u className=\"textGeneralNav\">Series</u></a>\n            </Link>\n            <Link to={\"/user/community\"}>\n              <a className=\"nav-item nav-link \" href=\"/user/community\"><u className=\"textGeneralNav\">Community</u> </a>\n            </Link>\n            \n            {favButton()}\n          </div>\n        </div>\n        <Search/>\n     <Buttons/>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/hooks/useInput.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Grid.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/Card.jsx",["76"],"import CardRange from \"./CardRange\";\nimport {useState, useContext } from \"react\";\nimport { UserContext } from \"..\";\nimport axios from \"axios\";\n\nconst Card = ({ data }) => {\n  const {user} = useContext(UserContext);\n  const [state,setState] = useState(\"\")\n\n  // arreglos puramente esteticos \n  const center = data.name ? \"centerSerie\": \"center\";\n  \n\n //agrega a fav\n  const addFavorites = (e) => {\n    setState(\"enabled\")\n     user.favMoviesId.push(data.id)\n    axios\n      .post(\"/api/favorites/add\",user)\n      .catch(err => console.log(err))\n      \n    \n  };\n //elimina de fav\n  const removeFavorites = (e) => {\n    setState(\"disabled\")\n    user.favMoviesId = user.favMoviesId.filter(movies=> movies !== data.id)\n    axios\n    .post(\"/api/favorites/remove\",user)\n    .catch(err => console.log(err))\n  }\n\n//aqui me fijo si tiene la propiedad name que es propia de las series, en este proyecto solo se pueden agregar peliculas a fav\n//el boton de agregar a fav de Card solo aparece si el usuario esta logeado\n//se fija ademas si la pelicula ya esta en la lista de fav y deja el boton acitivado\n  const buttons = () => {\n    if(!data.name){\n      if(user.id){\n        if((user.favMoviesId).includes(data.id)){\n            return  <i className=\"iLike iLike_press\" onClick={removeFavorites}></i>\n        }\n          return <i className=\"iLike\" onClick={addFavorites}></i>\n      }\n    }\n   \n return <></>\n  }\n\n//algunos arreglos en la data de cada pelicula para poder mostrarla mejor en el front\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n  let date = \"\";\n  let overview = `${data.overview.slice(0, 170)}...`;\n  let title = data.title ? (`${data.title.slice(0, 35)}`) : (`${data.name.slice(0, 35)}`)\n  if (data.release_date) date = data.release_date.slice(0, 4);\n\n\n  return (\n    <>\n      <div className=\"card movie_card \">\n        <img\n          src={`${imgUrl}${data.poster_path}`}\n          className=\"card-img-top image\"\n          alt=\"Movie Poster\"\n        ></img>\n        <div class=\"details\">\n          <div class={`${center}`}>\n            <h1>{title}</h1>\n            <p>{overview}</p>\n            <div>\n            {buttons()}\n            </div>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <span className=\"movie_info float-left\">\n            <span className=\"movie_info\">{date}</span>\n            <h5 className=\"card-title\">\n              <strong>{title}</strong>\n            </h5>\n          </span>\n          <CardRange range={data.vote_average} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Sidebar.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Content.jsx",["77","78","79"],"import axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useMatch, useParams } from \"react-router-dom\";\nimport { UserContext } from \"..\";\nimport Grid from \"./Grid\";\n\nconst Content = () => {\n  const { user, searched } = useContext(UserContext);\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\n  const [moviesGener, setMoviesGener] = useState([]);\n\n  //para hacer el pedido a el back /api/movies/geners/ID\n  const { id } = useParams();\n  const match = useMatch(`/geners/${id}`);\n\n  useEffect(() => {\n    axios\n      .get(\"api/movies/upcoming\")\n      .then((res) => setUpcomingMovies(res.data.results))\n      .catch((err) => console.log(err));\n\n    axios\n      .get(\"/api/movies/popular\")\n      .then((res) => setPopularMovies(res.data.results))\n      .catch((err) => console.log(err));\n\n    axios\n      .get(\"api/series\")\n      .then((res) => setSeries(res.data.results))\n      .catch((err) => console.log(err));\n  }, []);\n\n  //geners solo si matchea con /geners/id\n  useEffect(() => {\n    axios\n      .get(`/api/movies/geners/${id}`)\n      .then((res) => setMoviesGener(res.data.results))\n      .catch((err) => console.log(err));\n  }, [match]);\n\n  ///seting favs movies only if the user is login\n  //you can't see series in favs in this proyect (to be continue... )\n  useEffect(() => {\n    if (user.id) {\n      let favMovies = [];\n      user.favMoviesId.map((id, i) => {\n        axios\n          .get(`api/movies/single/${id}`)\n          .then((res) => favMovies.push(res.data))\n          .catch((err) => console.log(err));\n      });\n      setFavorites(favMovies);\n    }\n  }, [user.favMoviesId]);\n\n  \n  return id ? (\n    <div className=\"containerGrid\">\n    <Grid moviesGener={moviesGener} />\n    </div>\n  ) : (\n    <div className=\"containerGrid\">\n    <Grid\n      favorites={favorites}\n      popularMovies={popularMovies}\n      series={series}\n      upcomingMovies={upcomingMovies}\n      search={searched}\n    />\n     </div>\n  );\n};\n\nexport default Content;\n","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Register.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Login.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Buttons.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/CardRange.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/Search.jsx",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/comunnity.jsx",["80","81"],"import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport axios from \"axios\";\n\n\n  \n  const Community = () => {\n    const friends = useInput();\n    const [searchedFriend, setSearchedFriend]= useState(\"\");\n    console.log(\"searched\",searchedFriend)\n   useEffect(()=>{\n      Friend()\n    },[searchedFriend] )\n\n    const handleSubmit = (e) =>{\n      console.log(\"Activate\")\n      e.preventDefault();\n      const lowerFriend = (friends.value).toLowerCase()\n      axios\n        .get(`/api/community/${lowerFriend}`)\n        .then(res => {\n          console.log(res)\n          setSearchedFriend(res.data[0])\n        })\n    }\n  \n\n    const Friend = () => {\n       return searchedFriend ? (\n    <div className=\" box bg-white rounded cardCom shadow-sm py-3 px-4\">\n      <img src=\"https://cdn-icons-png.flaticon.com/512/947/947661.png\" alt=\"\" width=\"100\" class=\"img-fluid rounded-circle mb-3 img-thumbnail shadow-sm\"/>\n                <h4 className=\"mb-0 text-white\">{searchedFriend.userName}</h4>\n                <p>{`subject N°: ${searchedFriend.id} (id)`}</p>\n                <span className=\"small \">Planet: Earth</span>\n                <h5>{searchedFriend.email}</h5>\n            </div>  \n   \n      ) : (\n\n        <div className=\"box\">\n          <img src=\"https://cdn-icons.flaticon.com/png/512/2115/premium/2115958.png?token=exp=1646421555~hmac=37a0f15fe2b179fadd63d7b74c10db83\"  className=\"rounded-circle\" />\n          <p className=\"textGeneral\" >Sorry! we couldn't find your friend in this dimension</p>        \n      </div>\n  \n      )\n    }\n\n\n      return (\n        <div className=\"containerUser\">\n        <form className=\"form-inline formUsers\" onSubmit={handleSubmit}>\n            <input \n            {...friends}\n            className=\"form-control mr-sm-2\" \n            type=\"search\" \n            placeholder=\"Find friends ej: TarantinoLover190\" \n            aria-label=\"Search\"/>\n         </form>\n         <Friend/>\n\n        </div>\n      )\n  }\n\n  export default Community;","/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/utils/geners.js",[],"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/NotFound.jsx",["82"],"import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"containerGrid\">\n        <div className=\"boxNotFound\">\n      <h1 className=\"notfoundError\">ERROR! 404 page not Found</h1>\n    <img src=\"https://64.media.tumblr.com/642d92669c509994a0cbfe3d5103e49d/tumblr_nywsqe9cbH1v096cfo1_640.gifv\" about=\"gif\"/>\n  </div>\n      </div>\n  );\n};\n\nexport default NotFound;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":20,"column":5,"nodeType":"89","endLine":20,"endColumn":7,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":28,"column":12,"nodeType":"93","endLine":28,"endColumn":161},{"ruleId":"94","severity":1,"message":"95","line":8,"column":10,"nodeType":"96","messageId":"97","endLine":8,"endColumn":15},{"ruleId":"87","severity":1,"message":"98","line":42,"column":6,"nodeType":"89","endLine":42,"endColumn":13,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":49,"column":36,"nodeType":"102","messageId":"103","endLine":49,"endColumn":38},{"ruleId":"87","severity":1,"message":"104","line":57,"column":6,"nodeType":"89","endLine":57,"endColumn":24,"suggestions":"105"},{"ruleId":"87","severity":1,"message":"106","line":13,"column":7,"nodeType":"89","endLine":13,"endColumn":23,"suggestions":"107"},{"ruleId":"91","severity":1,"message":"92","line":41,"column":11,"nodeType":"93","endLine":41,"endColumn":175},{"ruleId":"91","severity":1,"message":"92","line":8,"column":5,"nodeType":"93","endLine":8,"endColumn":126},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setUser' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["111"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'Friend'. Either include it or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [setUser, user]",{"range":"122","text":"123"},"Update the dependencies array to be: [id, match]",{"range":"124","text":"125"},"Update the dependencies array to be: [user.favMoviesId, user.id]",{"range":"126","text":"127"},"Update the dependencies array to be: [Friend, searchedFriend]",{"range":"128","text":"129"},[477,479],"[setUser, user]",[1341,1348],"[id, match]",[1781,1799],"[user.favMoviesId, user.id]",[323,339],"[Friend, searchedFriend]"]