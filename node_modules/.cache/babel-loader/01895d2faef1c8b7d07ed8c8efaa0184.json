{"ast":null,"code":"import _slicedToArray from\"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import React,{useEffect,useState,useContext}from\"react\";import{useMatch,useParams}from\"react-router-dom\";import{UserContext}from\"..\";import Grid from\"./Grid\";import{jsx as _jsx}from\"react/jsx-runtime\";var Content=function Content(){var _useContext=useContext(UserContext),user=_useContext.user,searched=_useContext.searched;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),popularMovies=_useState2[0],setPopularMovies=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),favorites=_useState4[0],setFavorites=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),series=_useState6[0],setSeries=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),upcomingMovies=_useState8[0],setUpcomingMovies=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),moviesGener=_useState10[0],setMoviesGener=_useState10[1];//para hacer el pedido a el back /api/movies/geners/ID\nvar _useParams=useParams(),id=_useParams.id;var match=useMatch(\"/geners/\".concat(id));useEffect(function(){axios.get(\"api/movies/upcoming\").then(function(res){return setUpcomingMovies(res.data.results);}).catch(function(err){return console.log(err);});axios.get(\"/api/movies/popular\").then(function(res){return setPopularMovies(res.data.results);}).catch(function(err){return console.log(err);});axios.get(\"api/series\").then(function(res){return setSeries(res.data.results);}).catch(function(err){return console.log(err);});},[]);//geners solo si matchea con /geners/id\nuseEffect(function(){axios.get(\"/api/movies/geners/\".concat(id)).then(function(res){return setMoviesGener(res.data.results);}).catch(function(err){return console.log(err);});},[match]);///seting favs movies only if the user is login\n//you can't see series in favs in this proyect (to be continue... )\nuseEffect(function(){if(user.id){var favMovies=[];user.favMoviesId.map(function(id,i){axios.get(\"api/movies/single/\".concat(id)).then(function(res){return favMovies.push(res.data);}).catch(function(err){return console.log(err);});});setFavorites(favMovies);}},[user.favMoviesId]);return id?/*#__PURE__*/_jsx(\"div\",{className:\"containerGrid\",children:/*#__PURE__*/_jsx(Grid,{moviesGener:moviesGener})}):/*#__PURE__*/_jsx(\"div\",{className:\"containerGrid\",children:/*#__PURE__*/_jsx(Grid,{favorites:favorites,popularMovies:popularMovies,series:series,upcomingMovies:upcomingMovies,search:searched})});};export default Content;","map":{"version":3,"sources":["/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Content.jsx"],"names":["axios","React","useEffect","useState","useContext","useMatch","useParams","UserContext","Grid","Content","user","searched","popularMovies","setPopularMovies","favorites","setFavorites","series","setSeries","upcomingMovies","setUpcomingMovies","moviesGener","setMoviesGener","id","match","get","then","res","data","results","catch","err","console","log","favMovies","favMoviesId","map","i","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useMatch, useParams } from \"react-router-dom\";\nimport { UserContext } from \"..\";\nimport Grid from \"./Grid\";\n\nconst Content = () => {\n  const { user, searched } = useContext(UserContext);\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\n  const [moviesGener, setMoviesGener] = useState([]);\n\n  //para hacer el pedido a el back /api/movies/geners/ID\n  const { id } = useParams();\n  const match = useMatch(`/geners/${id}`);\n\n  useEffect(() => {\n    axios\n      .get(\"api/movies/upcoming\")\n      .then((res) => setUpcomingMovies(res.data.results))\n      .catch((err) => console.log(err));\n\n    axios\n      .get(\"/api/movies/popular\")\n      .then((res) => setPopularMovies(res.data.results))\n      .catch((err) => console.log(err));\n\n    axios\n      .get(\"api/series\")\n      .then((res) => setSeries(res.data.results))\n      .catch((err) => console.log(err));\n  }, []);\n\n  //geners solo si matchea con /geners/id\n  useEffect(() => {\n    axios\n      .get(`/api/movies/geners/${id}`)\n      .then((res) => setMoviesGener(res.data.results))\n      .catch((err) => console.log(err));\n  }, [match]);\n\n  ///seting favs movies only if the user is login\n  //you can't see series in favs in this proyect (to be continue... )\n  useEffect(() => {\n    if (user.id) {\n      let favMovies = [];\n      user.favMoviesId.map((id, i) => {\n        axios\n          .get(`api/movies/single/${id}`)\n          .then((res) => favMovies.push(res.data))\n          .catch((err) => console.log(err));\n      });\n      setFavorites(favMovies);\n    }\n  }, [user.favMoviesId]);\n\n  \n  return id ? (\n    <div className=\"containerGrid\">\n    <Grid moviesGener={moviesGener} />\n    </div>\n  ) : (\n    <div className=\"containerGrid\">\n    <Grid\n      favorites={favorites}\n      popularMovies={popularMovies}\n      series={series}\n      upcomingMovies={upcomingMovies}\n      search={searched}\n    />\n     </div>\n  );\n};\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}