{"ast":null,"code":"var _jsxFileName = \"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/CardRange.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n//RANGE genera un rango segun el valor que contenga la propiedad vote_average de cada pelicula de TMDB,\n//se fija el valor y pinta los corazones segun el rango correspondiendte\nconst CardRange = _ref => {\n  let {\n    range\n  } = _ref;\n  let rating = Math.floor(range); // range va de 0 a 10\n\n  const voidStar = /*#__PURE__*/_jsxDEV(\"i\", {\n    className: \"fa-regular fa-star\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 20\n  }, this);\n\n  const halfStar = /*#__PURE__*/_jsxDEV(\"i\", {\n    className: \"fa-solid fa-star-half-stroke rating-color\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n\n  const completeStar = /*#__PURE__*/_jsxDEV(\"i\", {\n    className: \"fa-solid fa-star rating-color\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 24\n  }, this);\n\n  let arr = [];\n\n  while (rating > 0) {\n    console.log(rating);\n\n    if (rating > 2) {\n      arr.push(completeStar);\n    } else {\n      if (!rating) {\n        arr.push(completeStar);\n      } else {\n        arr.push(halfStar);\n      }\n    }\n\n    rating -= 2;\n  }\n\n  while (arr.length < 5) {\n    arr.push(voidStar);\n  } //cambia la className de stars\n\n  /* if(rangeFloor!== 0){\n    for(let i=0; i<=loop; i+=0.5){\n       if(rangeFloor%3===0 && (Math.floor(i)===loop)){\n           rating[i]= halfStar\n           break\n        }\n            rating[i]=completeStar;\n       } \n  } */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [arr.map(star => star), /*#__PURE__*/_jsxDEV(\"i\", {\n      id: \"range\",\n      children: range\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CardRange;\nexport default CardRange;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardRange\");","map":{"version":3,"sources":["/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/common/CardRange.jsx"],"names":["CardRange","range","rating","Math","floor","voidStar","halfStar","completeStar","arr","console","log","push","length","map","star"],"mappings":";;;;AAAA;AACA;AACA,MAAMA,SAAS,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAb,CAD+B,CACC;;AAEhC,QAAMI,QAAQ,gBAAG;AAAG,IAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAjB;;AACA,QAAMC,QAAQ,gBACZ;AAAG,IAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;;AAGA,QAAMC,YAAY,gBAAG;AAAG,IAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAArB;;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,SAAON,MAAM,GAAE,CAAf,EAAkB;AAChBO,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AACA,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACdM,MAAAA,GAAG,CAACG,IAAJ,CAASJ,YAAT;AACD,KAFD,MAEO;AACL,UAAI,CAACL,MAAL,EAAa;AACXM,QAAAA,GAAG,CAACG,IAAJ,CAASJ,YAAT;AACD,OAFD,MAEO;AACLC,QAAAA,GAAG,CAACG,IAAJ,CAASL,QAAT;AACD;AACF;;AACDJ,IAAAA,MAAM,IAAI,CAAV;AACD;;AAED,SAAOM,GAAG,CAACI,MAAJ,GAAa,CAApB,EAAuB;AACrBJ,IAAAA,GAAG,CAACG,IAAJ,CAASN,QAAT;AACD,GA1B8B,CA4B/B;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,sBACE;AAAA,eACGG,GAAG,CAACK,GAAJ,CAASC,IAAD,IAAUA,IAAlB,CADH,eAEE;AAAG,MAAA,EAAE,EAAC,OAAN;AAAA,gBAAeb;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CA7CD;;KAAMD,S;AA+CN,eAAeA,SAAf","sourcesContent":["//RANGE genera un rango segun el valor que contenga la propiedad vote_average de cada pelicula de TMDB,\n//se fija el valor y pinta los corazones segun el rango correspondiendte\nconst CardRange = ({ range }) => {\n  let rating = Math.floor(range); // range va de 0 a 10\n\n  const voidStar = <i className=\"fa-regular fa-star\"></i>;\n  const halfStar = (\n    <i className=\"fa-solid fa-star-half-stroke rating-color\"></i>\n  );\n  const completeStar = <i className=\"fa-solid fa-star rating-color\"></i>;\n  let arr = [];\n\n  while (rating >0) {\n    console.log(rating);\n    if (rating > 2) {\n      arr.push(completeStar);\n    } else {\n      if (!rating) {\n        arr.push(completeStar);\n      } else {\n        arr.push(halfStar);\n      }\n    }\n    rating -= 2;\n  }\n\n  while (arr.length < 5) {\n    arr.push(voidStar);\n  }\n\n  //cambia la className de stars\n  /* if(rangeFloor!== 0){\n    for(let i=0; i<=loop; i+=0.5){\n       if(rangeFloor%3===0 && (Math.floor(i)===loop)){\n           rating[i]= halfStar\n           break\n        }\n            rating[i]=completeStar;\n       } \n} */\n\n  return (\n    <>\n      {arr.map((star) => star)}\n      <i id=\"range\">{range}</i>\n    </>\n  );\n};\n\nexport default CardRange;\n"]},"metadata":{},"sourceType":"module"}