{"ast":null,"code":"var _jsxFileName = \"/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Content.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useMatch, useParams } from \"react-router-dom\";\nimport { UserContext } from \"..\";\nimport Grid from \"./Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = () => {\n  _s();\n\n  const {\n    user,\n    searched\n  } = useContext(UserContext);\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\n  const [moviesGener, setMoviesGener] = useState([]);\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const match = useMatch(`/geners/${id}`);\n  useEffect(() => {\n    console.log(\"id\", id);\n    axios.get(\"api/movies/upcoming\").then(res => setUpcomingMovies(res.data.results));\n    axios.get(\"/api/movies/popular\").then(res => setPopularMovies(res.data.results));\n    axios.get(\"api/series\").then(res => setSeries(res.data.results));\n  }, []);\n  useEffect(() => {\n    axios.get(`/api/movies/geners/${id}`).then(res => {\n      console.log(res.data);\n      setMoviesGener(res.data.results);\n    });\n  }, [match]); ///seting favs movies only if the user is login\n  //ypu can't see series in favs in this proyect (to be continue... )\n\n  useEffect(() => {\n    if (user.id) {\n      let favMovies = [];\n      user.favMoviesId.map((id, i) => {\n        axios.get(`api/movies/single/${id}`).then(res => {\n          favMovies.push(res.data);\n        });\n      });\n      setFavorites(favMovies);\n    }\n  }, [user.favMoviesId]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    favorites: favorites,\n    popularMovies: popularMovies,\n    series: series,\n    upcomingMovies: upcomingMovies,\n    search: searched,\n    moviesGener: moviesGener\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Content, \"vFOzu1KbSAe2GPhFpAfUjzZ/2zY=\", false, function () {\n  return [useParams, useMatch];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/checkpoint-TMDB-220102/src/components/Content.jsx"],"names":["axios","React","useEffect","useState","useContext","useMatch","useParams","UserContext","Grid","Content","user","searched","popularMovies","setPopularMovies","favorites","setFavorites","series","setSeries","upcomingMovies","setUpcomingMovies","moviesGener","setMoviesGener","id","console","log","match","get","then","res","data","results","favMovies","favMoviesId","map","i","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useMatch, useParams } from \"react-router-dom\";\nimport { UserContext } from \"..\";\nimport Grid from \"./Grid\";\n\n\nconst Content = () =>{\n    const { user, searched} = useContext(UserContext)\n    const [popularMovies, setPopularMovies] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n    const [series, setSeries] = useState([]);\n    const [upcomingMovies, setUpcomingMovies] = useState([]);\n    const [moviesGener, setMoviesGener] = useState([]);\n\n    const {id}=useParams();\n    console.log(id)\n    const match = useMatch(`/geners/${id}`);\n\n   \n\n    useEffect(()=>{\n        console.log(\"id\", id)\n        axios\n         .get(\"api/movies/upcoming\")\n         .then(res => setUpcomingMovies(res.data.results))\n       \n        axios \n         .get(\"/api/movies/popular\")\n         .then(res => setPopularMovies(res.data.results))\n\n         axios\n         .get(\"api/series\")\n         .then(res => setSeries(res.data.results))\n        \n   \n    },[])\n\n    useEffect(()=>{\n        axios\n        .get(`/api/movies/geners/${id}`)\n        .then(res => {\n           console.log(res.data)\n           setMoviesGener(res.data.results)\n        })\n    },[match])\n\n  \n ///seting favs movies only if the user is login\n    //ypu can't see series in favs in this proyect (to be continue... )\n    useEffect(()=>{\n        if(user.id){\n            let favMovies = [];\n\n            (user.favMoviesId).map((id,i) => {\n                axios\n                .get(`api/movies/single/${id}`)\n                .then(res => {\n                    favMovies.push(res.data);\n                 })\n            })\n            setFavorites(favMovies)\n    \n        }\n    },[(user.favMoviesId)])\n   \n    return (\n        <Grid \n        favorites={favorites} \n        popularMovies={popularMovies} \n        series={series} \n        upcomingMovies={upcomingMovies} \n        search={searched}\n        moviesGener={moviesGener}\n        />\n    )\n\n       \n   \n       \n    \n        \n           \n           \n    \n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}